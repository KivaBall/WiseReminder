// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WiseReminder.Infrastructure.Data;

#nullable disable

namespace WiseReminder.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WiseReminder.Domain.Authors.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("WiseReminder.Domain.Categories.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("WiseReminder.Domain.Quotes.Quote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("WiseReminder.Domain.Authors.Author", b =>
                {
                    b.OwnsOne("WiseReminder.Domain.Shared.Date", "BirthDate", b1 =>
                        {
                            b1.Property<Guid>("AuthorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<byte>("Day")
                                .HasColumnType("tinyint")
                                .HasColumnName("BirthDay");

                            b1.Property<byte>("Month")
                                .HasColumnType("tinyint")
                                .HasColumnName("BirthMonth");

                            b1.Property<short>("Year")
                                .HasColumnType("smallint")
                                .HasColumnName("BirthYear");

                            b1.HasKey("AuthorId");

                            b1.ToTable("Authors");

                            b1.WithOwner()
                                .HasForeignKey("AuthorId");
                        });

                    b.OwnsOne("WiseReminder.Domain.Shared.Date", "DeathDate", b1 =>
                        {
                            b1.Property<Guid>("AuthorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<byte>("Day")
                                .HasColumnType("tinyint")
                                .HasColumnName("DeathDay");

                            b1.Property<byte>("Month")
                                .HasColumnType("tinyint")
                                .HasColumnName("DeathMonth");

                            b1.Property<short>("Year")
                                .HasColumnType("smallint")
                                .HasColumnName("DeathYear");

                            b1.HasKey("AuthorId");

                            b1.ToTable("Authors");

                            b1.WithOwner()
                                .HasForeignKey("AuthorId");
                        });

                    b.Navigation("BirthDate")
                        .IsRequired();

                    b.Navigation("DeathDate");
                });

            modelBuilder.Entity("WiseReminder.Domain.Quotes.Quote", b =>
                {
                    b.HasOne("WiseReminder.Domain.Authors.Author", "Author")
                        .WithMany("Quotes")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WiseReminder.Domain.Categories.Category", "Category")
                        .WithMany("Quotes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("WiseReminder.Domain.Shared.Date", "QuoteDate", b1 =>
                        {
                            b1.Property<Guid>("QuoteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<byte>("Day")
                                .HasColumnType("tinyint")
                                .HasColumnName("QuoteDay");

                            b1.Property<byte>("Month")
                                .HasColumnType("tinyint")
                                .HasColumnName("QuoteMonth");

                            b1.Property<short>("Year")
                                .HasColumnType("smallint")
                                .HasColumnName("QuoteYear");

                            b1.HasKey("QuoteId");

                            b1.ToTable("Quotes");

                            b1.WithOwner()
                                .HasForeignKey("QuoteId");
                        });

                    b.Navigation("Author");

                    b.Navigation("Category");

                    b.Navigation("QuoteDate")
                        .IsRequired();
                });

            modelBuilder.Entity("WiseReminder.Domain.Authors.Author", b =>
                {
                    b.Navigation("Quotes");
                });

            modelBuilder.Entity("WiseReminder.Domain.Categories.Category", b =>
                {
                    b.Navigation("Quotes");
                });
#pragma warning restore 612, 618
        }
    }
}
